#ifndef __RICKSHELL_ERROR_H__
#define __RICKSHELL_ERROR_H__
#include <stdio.h>
#include "rstring.h"

typedef enum {
  ERRCODE_ERR = 0,
  ERRCODE_EOF,
  ERRCODE_MEMALLOC_FAILED,
  ERRCODE_INVALID_ARGUMENT,
  ERRCODE_INVALID_INPUT,
  ERRCODE_INPUT_READ_FAILED,
  ERRCODE_INPUT_EMPTY,
  ERRCODE_INPUT_TOO_LARGE,
  /* Command Errors */
  ERRCODE_COMMAND_PARSE_FAILED,
  ERRCODE_NO_COMMAND_TO_EXECUTE,
  /* Execute Errors */
  ERRCODE_EXEC_FAILED,
  ERRCODE_EXEC_FORK_FAILED,
  ERRCODE_EXEC_WAIT_FAILED,
  ERRCODE_EXEC_PIPE_FAILED,
  ERRCODE_EXEC_REDIRECT_FAILED,
  /* Variable Errors */
  ERRCODE_VAR_NOT_FOUND,
  ERRCODE_VAR_SET_FAILED,
  ERRCODE_VAR_TYPE_DISMATCH,
  /* Array Errors */
  ERRCODE_ARRAY_INVALID_INDEX,
  /* Map Errors */
  ERRCODE_MAP_MEMORY,
  ERRCODE_MAP_KEY_NOT_FOUND,
  ERRCODE_MAP_KEY_EXISTS,
  ERRCODE_MAP_INVALID_ARGUMENT,
  /* Strconv Errors */
  ERRCODE_STRCONV_CONVERSION_FAILED,
  ERRCODE_STRCONV_OVERFLOW,
  ERRCODE_STRCONV_UNDERFLOW,
  /* Unicode Errors */
  ERRCODE_UNICODE_NULL_POINTER,
  ERRCODE_UNICODE_INVALID_CODEPOINT,
  ERRCODE_UNICODE_BUFFER_TOO_SMALL,
  ERRCODE_UNICODE_INVALID_UTF8,
} ErrCode;

typedef struct {
  string msg;
  ErrCode code;
} ErrorInterface;

void print_error(const string message);
#endif /* __RICKSHELL_ERROR_H__ */